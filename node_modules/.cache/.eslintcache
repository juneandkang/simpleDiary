[{"/Users/june/Desktop/simplediary/src/index.js":"1","/Users/june/Desktop/simplediary/src/App.js":"2","/Users/june/Desktop/simplediary/src/DiaryEditior.js":"3","/Users/june/Desktop/simplediary/src/DiaryList.js":"4","/Users/june/Desktop/simplediary/src/DiaryItem.js":"5","/Users/june/Desktop/simplediary/src/OptimizeTest.js":"6"},{"size":467,"mtime":1676340106642,"results":"7","hashOfConfig":"8"},{"size":2063,"mtime":1676861490843,"results":"9","hashOfConfig":"8"},{"size":1975,"mtime":1676527283789,"results":"10","hashOfConfig":"8"},{"size":535,"mtime":1676534649371,"results":"11","hashOfConfig":"8"},{"size":2085,"mtime":1676535128915,"results":"12","hashOfConfig":"8"},{"size":1237,"mtime":1676859249902,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"trybak",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/june/Desktop/simplediary/src/index.js",[],[],"/Users/june/Desktop/simplediary/src/App.js",["34"],[],"import './App.css';\nimport DiaryEditor from './DiaryEditior';\nimport DiaryList from './DiaryList';\nimport { useRef, useState, useEffect, useMemo } from 'react';\n\nfunction App() {\n\n  const [data,setData] = useState([]);\n  const dataId = useRef(0);\n\n  const getData = async() => {\n    const res = await fetch(\n      'https://jsonplaceholder.typicode.com/comments'\n    ).then((res)=>res.json());\n    \n    const initData = res.slice(0,20).map((item)=>{\n      return {\n        author : item.email,\n        content : item.body,\n        emotion : Math.floor(Math.random()*5)+1,\n        created_date : new Date().getTime(),\n        id: dataId.current++\n      }\n    });\n    setData(initData);\n  }\n\n  useEffect(()=>{\n    getData();\n  }\n  ,[])\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current,\n    }\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  }\n\n  const onRemove = (targetId) =>{\n    const newDiaryList = data.filter((item)=>item.id !== targetId);\n    setData(newDiaryList);\n  }\n\n  const onEdit = (targetId,newContent) =>{\n    setData(\n      data.map((item)=>\n      item.id === targetId ? {...item, content:newContent} : item \n      )\n    );\n  }\n\n  const getDiaryAnalysis = useMemo(\n    ()=>{\n    const goodCount = data.filter((it)=>it.emotion>=3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = (goodCount/data.length)*100;\n    return {goodCount, badCount, goodRatio};\n  },[data.length]\n  );\n\n  const {goodCount,badCount,goodRatio} = getDiaryAnalysis;\n\n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate}/>\n      <div>전체 일기:{data.length}</div>\n      <div>기분 좋은 일기 개수 : {goodCount}</div>\n      <div>기분 나쁜 일기 개수 : {badCount}</div>\n      <div>기분이 좋은 일기 비율 : {goodRatio}%</div>\n      <DiaryList diaryList={data} onRemove={onRemove} onEdit={onEdit}/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/june/Desktop/simplediary/src/DiaryEditior.js",[],[],"/Users/june/Desktop/simplediary/src/DiaryList.js",[],[],[],"/Users/june/Desktop/simplediary/src/DiaryItem.js",[],[],"/Users/june/Desktop/simplediary/src/OptimizeTest.js",[],[],{"ruleId":"35","severity":1,"message":"36","line":65,"column":5,"nodeType":"37","endLine":65,"endColumn":18,"suggestions":"38"},"react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["39"],{"desc":"40","fix":"41"},"Update the dependencies array to be: [data]",{"range":"42","text":"43"},[1569,1582],"[data]"]